diff --git a/projects/mozilla/support/npmac.cpp b/projects/mozilla/support/npmac.cpp
index ccc3945..1b38392 100644
--- a/projects/mozilla/support/npmac.cpp
+++ b/projects/mozilla/support/npmac.cpp
@@ -4,6 +4,8 @@
 //
 //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 
+#include "config.h"
+
 #include <string.h>
 
 #include <Processes.h>
@@ -54,7 +56,11 @@
 #undef XP_UNIX
 #endif
 
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
 #include "npupp.h"
+#else
+#include "npfunctions.h"
+#endif
 
 #ifdef __MWERKS__
 #ifndef powerc
@@ -993,6 +999,7 @@ DEFINE_API_C(NPError) main(NPNetscapeFuncs* nsTable, NPPluginFuncs* pluginFuncs,
         //
         pluginFuncs->version        = (NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR;
         pluginFuncs->size           = sizeof(NPPluginFuncs);
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
         pluginFuncs->newp           = NewNPP_NewProc(PLUGIN_TO_HOST_GLUE(newp, Private_New));
         pluginFuncs->destroy        = NewNPP_DestroyProc(PLUGIN_TO_HOST_GLUE(destroy, Private_Destroy));
         pluginFuncs->setwindow      = NewNPP_SetWindowProc(PLUGIN_TO_HOST_GLUE(setwindow, Private_SetWindow));
@@ -1004,9 +1011,26 @@ DEFINE_API_C(NPError) main(NPNetscapeFuncs* nsTable, NPPluginFuncs* pluginFuncs,
         pluginFuncs->print          = NewNPP_PrintProc(PLUGIN_TO_HOST_GLUE(print, Private_Print));
         pluginFuncs->event          = NewNPP_HandleEventProc(PLUGIN_TO_HOST_GLUE(event, Private_HandleEvent));
         pluginFuncs->getvalue       = NewNPP_GetValueProc(PLUGIN_TO_HOST_GLUE(getvalue, Private_GetValue));
+#else
+        pluginFuncs->newp           = (NewNPP_NewProcPtr)(PLUGIN_TO_HOST_GLUE(newp, Private_New));
+        pluginFuncs->destroy        = (NewNPP_DestroyProcPtr)(PLUGIN_TO_HOST_GLUE(destroy, Private_Destroy));
+        pluginFuncs->setwindow      = (NewNPP_SetWindowProcPtr)(PLUGIN_TO_HOST_GLUE(setwindow, Private_SetWindow));
+        pluginFuncs->newstream      = (NewNPP_NewStreamProcPtr)(PLUGIN_TO_HOST_GLUE(newstream, Private_NewStream));
+        pluginFuncs->destroystream  = (NewNPP_DestroyStreamProcPtr)(PLUGIN_TO_HOST_GLUE(destroystream, Private_DestroyStream));
+        pluginFuncs->asfile         = (NewNPP_StreamAsFileProcPtr)(PLUGIN_TO_HOST_GLUE(asfile, Private_StreamAsFile));
+        pluginFuncs->writeready     = (NewNPP_WriteReadyProcPtr)(PLUGIN_TO_HOST_GLUE(writeready, Private_WriteReady));
+        pluginFuncs->write          = (NewNPP_WriteProcPtr)(PLUGIN_TO_HOST_GLUE(write, Private_Write));
+        pluginFuncs->print          = (NewNPP_PrintProcPtr)(PLUGIN_TO_HOST_GLUE(print, Private_Print));
+        pluginFuncs->event          = (NewNPP_HandleEventProcPtr)(PLUGIN_TO_HOST_GLUE(event, Private_HandleEvent));
+        pluginFuncs->getvalue       = (NewNPP_GetValueProcPtr)(PLUGIN_TO_HOST_GLUE(getvalue, Private_GetValue));
+#endif
         if( navMinorVers >= NPVERS_HAS_NOTIFICATION )
         {
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
             pluginFuncs->urlnotify = NewNPP_URLNotifyProc(PLUGIN_TO_HOST_GLUE(urlnotify, Private_URLNotify));
+#else
+            pluginFuncs->urlnotify = (NewNPP_URLNotifyProcPtr)(PLUGIN_TO_HOST_GLUE(urlnotify, Private_URLNotify));
+#endif
         }
 #ifdef OJI
         if( navMinorVers >= NPVERS_HAS_LIVECONNECT )
diff --git a/projects/mozilla/support/npunix.c b/projects/mozilla/support/npunix.c
index 26c6736..933aad3 100644
--- a/projects/mozilla/support/npunix.c
+++ b/projects/mozilla/support/npunix.c
@@ -38,12 +38,20 @@
  *----------------------------------------------------------------------
  */
 
+#include "config.h"
+
 #define XP_UNIX 1
 #define OJI 1
 
 #include <stdio.h>
 #include <npapi.h>
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
 #include <npupp.h>
+#define MOZJREF jref
+#else
+#include <npfunctions.h>
+#define MOZJREF void*
+#endif
 
 /*
  * Define PLUGIN_TRACE to have the wrapper functions print
@@ -198,7 +206,7 @@ JRIEnv* NPN_GetJavaEnv()
     return CallNPN_GetJavaEnvProc(gNetscapeFuncs.getJavaEnv);
 }
 
-jref NPN_GetJavaPeer(NPP instance)
+MOZJREF NPN_GetJavaPeer(NPP instance)
 {
     return CallNPN_GetJavaPeerProc(gNetscapeFuncs.getJavaPeer,
                        instance);
@@ -529,7 +537,7 @@ Private_SetValue(NPP instance, NPPVariable variable, void *r_value)
 JRIGlobalRef
 Private_GetJavaClass(void)
 {
-    jref clazz = NPP_GetJavaClass();
+    MOZJREF clazz = NPP_GetJavaClass();
     if (clazz) {
         JRIEnv* env = NPN_GetJavaEnv();
         return JRI_NewGlobalRef(env, clazz);
@@ -685,6 +693,7 @@ NP_Initialize(NPNetscapeFuncs* nsTable, NPPluginFuncs* pluginFuncs)
          */
         pluginFuncs->version    = (NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR;
         pluginFuncs->size       = sizeof(NPPluginFuncs);
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
         pluginFuncs->newp       = NewNPP_NewProc(Private_New);
         pluginFuncs->destroy    = NewNPP_DestroyProc(Private_Destroy);
         pluginFuncs->setwindow  = NewNPP_SetWindowProc(Private_SetWindow);
@@ -697,9 +706,27 @@ NP_Initialize(NPNetscapeFuncs* nsTable, NPPluginFuncs* pluginFuncs)
         pluginFuncs->event      = NULL;
         pluginFuncs->getvalue   = NewNPP_GetValueProc(Private_GetValue);
         pluginFuncs->setvalue   = NewNPP_SetValueProc(Private_SetValue);
+#else
+        pluginFuncs->newp       = (NPP_NewProcPtr)(Private_New);
+        pluginFuncs->destroy    = (NewNPP_DestroyProcPtr)(Private_Destroy);
+        pluginFuncs->setwindow  = (NewNPP_SetWindowProcPtr)(Private_SetWindow);
+        pluginFuncs->newstream  = (NewNPP_NewStreamProcPtr)(Private_NewStream);
+        pluginFuncs->destroystream = (NewNPP_DestroyStreamProcPtr)(Private_DestroyStream);
+        pluginFuncs->asfile     = (NewNPP_StreamAsFileProcPtr)(Private_StreamAsFile);
+        pluginFuncs->writeready = (NewNPP_WriteReadyProcPtr)(Private_WriteReady);
+        pluginFuncs->write      = (NewNPP_WriteProcPtr)(Private_Write);
+        pluginFuncs->print      = (NewNPP_PrintProcPtr)(Private_Print);
+        pluginFuncs->event      = NULL;
+        pluginFuncs->getvalue   = (NewNPP_GetValueProcPtr)(Private_GetValue);
+        pluginFuncs->setvalue   = (NewNPP_SetValueProcPtr)(Private_SetValue);
+#endif
         if( navMinorVers >= NPVERS_HAS_NOTIFICATION )
         {
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
             pluginFuncs->urlnotify = NewNPP_URLNotifyProc(Private_URLNotify);
+#else
+            pluginFuncs->urlnotify = (NewNPP_URLNotifyProcPtr)(Private_URLNotify);
+#endif
         }
 #ifdef OJI
         if( navMinorVers >= NPVERS_HAS_LIVECONNECT )
diff --git a/projects/mozilla/support/npwin.cpp b/projects/mozilla/support/npwin.cpp
index c277f84..8d72e76 100644
--- a/projects/mozilla/support/npwin.cpp
+++ b/projects/mozilla/support/npwin.cpp
@@ -42,7 +42,13 @@
 #endif
 
 #include "npapi.h"
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
 #include "npupp.h"
+#define MOZJREF jref
+#else
+#include "npfunctions.h"
+#define MOZJREF void*
+#endif
 
 //\\// DEFINE
 #define NP_EXPORT
@@ -61,7 +67,7 @@ JRIGlobalRef Private_GetJavaClass(void);
 JRIGlobalRef
 Private_GetJavaClass(void)
 {
-    jref clazz = NPP_GetJavaClass();
+    MOZJREF clazz = NPP_GetJavaClass();
     if (clazz) {
         JRIEnv* env = NPN_GetJavaEnv();
         return JRI_NewGlobalRef(env, clazz);
@@ -351,7 +357,7 @@ JRIEnv* NPN_GetJavaEnv(void)
     return g_pNavigatorFuncs->getJavaEnv();
 }
 
-jref NPN_GetJavaPeer(NPP instance)
+MOZJREF NPN_GetJavaPeer(NPP instance)
 {
     return g_pNavigatorFuncs->getJavaPeer(instance);
 }
diff --git a/projects/mozilla/vlcshell.cpp b/projects/mozilla/vlcshell.cpp
index 7adfca6..3adf09d 100644
--- a/projects/mozilla/vlcshell.cpp
+++ b/projects/mozilla/vlcshell.cpp
@@ -36,6 +36,13 @@
 #   include <mozilla-config.h>
 #endif
 
+#include "npapi.h"
+#if (((NP_VERSION_MAJOR << 8) + NP_VERSION_MINOR) < 20)
+#define MOZJREF jref
+#else
+#define MOZJREF void*
+#endif
+
 /* This is from mozilla java, do we really need it? */
 #if 0
 #include <jri.h>
@@ -294,7 +301,7 @@ NPError NPP_Initialize( void )
     return NPERR_NO_ERROR;
 }
 
-jref NPP_GetJavaClass( void )
+MOZJREF NPP_GetJavaClass( void )
 {
     return NULL;
 }
